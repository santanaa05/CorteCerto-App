import { View, Text, FlatList, TouchableOpacity } from 'react-native'; 
// Importa os componentes essenciais do React Native para construir a interface: 
// View (cont√™iner para conte√∫do), Text (texto), FlatList (lista otimizada de dados), TouchableOpacity (bot√µes com intera√ß√£o t√°til)

import { FontAwesome } from '@expo/vector-icons'; 
// Importa a biblioteca FontAwesome de √≠cones, permitindo a utiliza√ß√£o de √≠cones como "trash" para o bot√£o de remo√ß√£o de reserva.

interface Reserva { 
  id: string; 
  servico: string; 
  horario: string; 
  profissional: string; 
  preco: string; 
  data: string; 
} 
// Define uma interface para o tipo de dados de uma reserva. Cada reserva tem um ID, servi√ßo, hor√°rio, profissional, pre√ßo e data.

const reservas: Reserva[] = [ 
  { 
    id: '1', 
    servico: 'Tonaliza√ß√£o', 
    horario: '16:30 - 17:00', 
    profissional: 'Kaio', 
    preco: 'R$ 30,00', 
    data: '12/12/24', 
  }, 
  { 
    id: '2', 
    servico: 'Barba Prime', 
    horario: '10:30 - 11:00', 
    profissional: 'Kaio', 
    preco: 'R$ 50,00', 
    data: '01/12/24', 
  }, 
]; 
// Declara um array de objetos do tipo Reserva, que ser√° exibido na interface. Cada objeto cont√©m dados de uma reserva.

export default function MinhasReservas() { 
  return ( 
    <View style={{ flex: 1, backgroundColor: '#F8FAFC', padding: 20 }}>
      {/* View principal com fundo claro e padding */}
      
      <Text style={{ fontSize: 18, fontWeight: 'bold', textAlign: 'center', marginBottom: 10 }}>
        Minhas Reservas
      </Text> 
      {/* T√≠tulo da tela exibido no centro */}
      
      <Text style={{ fontSize: 12, color: 'gray', marginBottom: 10 }}>ITENS</Text> 
      {/* Texto que indica a se√ß√£o dos itens (reservas) */}
      
      <FlatList 
        data={reservas} 
        keyExtractor={(item) => item.id} 
        renderItem={({ item }) => ( 
          <View style={{ backgroundColor: 'white', padding: 15, borderRadius: 10, marginBottom: 10, elevation: 2 }}>
            {/* View que envolve cada item da lista, com fundo branco e sombra para parecer uma carta flutuante */}
            
            <View style={{ flexDirection: 'row', justifyContent: 'space-between' }}>
              {/* Flexbox para alinhar os elementos (servi√ßo e data) no mesmo n√≠vel e distribu√≠-los */}
              <Text style={{ fontSize: 16, fontWeight: 'bold' }}>{item.servico}</Text>
              {/* Exibe o nome do servi√ßo com estilo em negrito */}
              <Text style={{ fontSize: 12, color: 'gray' }}>{item.data}</Text>
              {/* Exibe a data da reserva em formato reduzido e cinza */}
            </View>
            
            <Text style={{ fontSize: 14, color: 'gray' }}>‚è∞ {item.horario}</Text>
            {/* Exibe o hor√°rio da reserva */}
            <Text style={{ fontSize: 14, color: 'gray' }}>üë§ Profissional: {item.profissional}</Text>
            {/* Exibe o nome do profissional respons√°vel pela reserva */}
            
            <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', marginTop: 5 }}>
              {/* Alinha o pre√ßo e o √≠cone de exclus√£o no final da linha */}
              <Text style={{ fontSize: 16, color: 'green', fontWeight: 'bold' }}>{item.preco}</Text>
              {/* Exibe o pre√ßo da reserva em verde e em negrito */}
              
              <TouchableOpacity onPress={() => console.log('Remover reserva', item.id)}>
                {/* Bot√£o de exclus√£o de reserva */}
                <FontAwesome name="trash" size={20} color="red" />
                {/* √çcone de lixo (trash) da FontAwesome, que serve como bot√£o de exclus√£o */}
              </TouchableOpacity>
            </View>
          </View> 
        )} 
      />
    </View>
  ); 
} 
// O FlatList √© usado para renderizar as reservas, proporcionando uma lista otimizada. Para cada reserva, exibe informa√ß√µes como servi√ßo, hor√°rio, profissional e pre√ßo, al√©m de um bot√£o para excluir a reserva (a a√ß√£o de exclus√£o est√° apenas logando o ID da reserva no console).
